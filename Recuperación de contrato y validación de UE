METHOD check_business_entity.

    DATA: cn_object      TYPE REF TO if_recn_contract,
          lo_ass_manager TYPE REF TO if_rebd_obj_assign_mngr,
          lt_list        TYPE re_t_obj_assign,
          ls_list        LIKE LINE OF lt_list,
          ld_contador    TYPE i.

*   Recuperamos el objeto de contrato
    TRY.
        cn_object ?= io_object. "contrato
      CATCH cx_sy_move_cast_error.
        RETURN.
    ENDTRY.

*   Recuperamos el assign manager
    cn_object->get_obj_assign_mngr( IMPORTING eo_obj_assign_mngr = lo_ass_manager ).

*   Recuperamos la lista de objetos del assign manager
    CALL METHOD lo_ass_manager->get_list
      EXPORTING
        if_fix_periods = abap_false
      IMPORTING
        et_list        = lt_list.

    " Siempre que se cree o modifique un contrato
    IF id_activity EQ reca1_activity-create OR id_activity EQ reca1_activity-change.
*   Recorremos la lista de objetos del assign manager
      LOOP AT lt_list INTO ls_list.
        IF ls_list-objnrtrg(2) EQ reca1_objtype-business_entity.
          ADD 1 TO ld_contador.
        ENDIF.
      ENDLOOP.

*   Siempre ha de estar informada una UE en el contarto, pero no mas de una
      IF ld_contador EQ 0.
        MESSAGE e000 WITH 'El contrato debe disponer de una Unidad Económica'. " añadir en type pool "El contrato debe disponer de una Unidad Económica
      ELSEIF ld_contador GT 1.
        MESSAGE e000 WITH 'Sólo es posible asociar una Unidad Económica en el contrato'. " añadir en type pool "Sólo es posible asociar una Unidad Económica en el contrato
      ENDIF.

    ENDIF.
  ENDMETHOD.
